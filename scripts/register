#!/bin/bash

set -e

source .env
source scripts/helpers/functions

timestamp=$(date +%s)

priv_key_path="data/raiko/secrets/priv.key"
bootstrap_path="data/raiko/config/bootstrap.json"

mkdir -p data/raiko/config
mkdir -p data/raiko/secrets

if [[ -f "$priv_key_path" ]]; then
  echo "ðŸ”‘ Found existing raiko private key"

  ask "Do you want to register again? [Y/N]" REGISTER_AGAIN "N"
  if [ "$REGISTER_AGAIN" = "N" ] || [ "$REGISTER_AGAIN" = "n" ]; then
    exit 0
  fi

  docker compose down
  sudo mv "${priv_key_path}" "${priv_key_path}.${timestamp}"
  sudo mv "${bootstrap_path}" "${bootstrap_path}.${timestamp}"
  sed -i "s/^SRN_INSTANCE_ID=/SRN_INSTANCE_ID=\n# ${timestamp} SRN_INSTANCE_ID=/g" ".env"

  if [[ "$SRN_RAIKO_IMAGE" == "raiko" ]]; then
    ask "Do you want to rebuild images? [Y/N]" BUILD_AGAIN "N"
    if [ "$BUILD_AGAIN" != "N" ] && [ "$BUILD_AGAIN" != "n" ]; then
      docker compose build
    fi
  else
    ask "Do you want to pull the latest images? [Y/N]" PULL_AGAIN "N"
    if [ "$PULL_AGAIN" != "N" ] && [ "$PULL_AGAIN" != "n" ]; then
      docker compose pull
    fi
  fi

  sleep 5
fi

docker compose run --rm raiko --init
V3_QUOTE_BYTES=$(jq -r '.quote' <"$bootstrap_path")

ask "Provide your private key:" PRIVATE_KEY
ask "Provide L1 RPC url: " L1_RPC "https://rpc.ankr.com/eth_holesky"

register_sgx_helper=$(pwd)/scripts/helpers/register-sgx

cd "src/taiko-mono/packages/protocol"
pnpm install
pnpm compile

if ! registration_process=$(PRIVATE_KEY=${PRIVATE_KEY} FORK_URL=${L1_RPC} V3_QUOTE_BYTES=${V3_QUOTE_BYTES} ${register_sgx_helper}); then
  echo "$registration_process"
  echo "ðŸš« Failed to register SGX instance"
  cd -
  exit 1
fi

echo "$registration_process"
cd -

SGX_INSTANCE_ID=$(echo "${registration_process}" | grep -oP -m 1 'register sgx instance index: \K\d+')

sed -i "s/^SRN_INSTANCE_ID=/SRN_INSTANCE_ID=$SGX_INSTANCE_ID/g" ".env"
echo "âœ… Registered SGX instance with ID: $SGX_INSTANCE_ID"

docker compose down && docker compose up -d

public_ip=$(curl -s ifconfig.me)
echo && echo "ðŸš€ raiko is running and accessible at: http://${public_ip}:${SRN_RAIKO_PORT:-8080}"

if [[ $COMPOSE_PROFILES == "metrics" ]]; then
  echo "ðŸ“Š Prometheus is running and accessible at: http://${public_ip}:${SRN_PROMETHEUS_PORT:-9090}"
  echo "ðŸ“ˆ Grafana is running and accessible at: http://${public_ip}:${SRN_GRAFANA_PORT:-3000}"
fi
